@startuml SunTracker

' Define classes

package "sun_tracker" #DDDDDD
{

class PiCamera <existing>
{
}

class CameraProcessor <new>
{
    - {field}__frame : list(int) 
    - {field}__q0 : list(int)
    - {field}__q1 : list(int)
    - {field}__q2 : list(int)
    - {field}__q3 : list(int)
    - w : int
    - h : int
    - half_w : int
    - half_h : int
    - pxl : int
    + __init__(\n\
        size : tuple(int))
    + set_frame(\n\
        frame : list(int)) -> None
    + get_frame() -> list(int)
    + convert_frame() -> None
    + set_quadrants(\n\
        q0 : list(int),\n\
        q1 : list(int),\n\
        q2 : list(int),\n\
        q3 : list(int)) -> None
    + split_frame() -> None
    + get_quadrants() -> tuple(list(int))
    + compute_brightness() -> tuple(float)
    + recombine() -> list(int)
}

' class QuadCellProcessor <new>
' {
'     + __init__()
'     + set_current_voltages(\n\
'         input_voltages : tuple(float)) -> None
'     + get_computed_values() -> tuple(float)
' }

class QuadCellDecoder <new>
{
    - {field}__quadrant_intensities : tuple(float)
    - {field}__quadrant_variance : float
    - {field}__brightest_quadrants : list(bool)
    - {field}__servo_controller : ServoController
    - std_dev_coefficient : float
    - movement_cutoff : float
    + __init__(\n\
        std_dev_coefficinet : float,\n\
        movement_cutoff : float)
    + set_intensity_values(\n\
        input_intensities : tuple(float)) -> None
    + compute_quadrant_variance() -> None
    + locate_brightest_quadrants() -> None
    + decode_brightness_into_direction() -> None
    + get_quadrant_intensities() -> tuple(float)
    + get_quadrant_variance() -> float
    + get_brightest_quadrants() -> tuple(bool)
    + get_servo_controller() -> ServoController
}

enum SERVO_DIRECTION
{
    PAN_LEFT
    PAN_RIGHT
    TILT_UP
    TILT_DOWN
}

class ServoController <new>
{
    - __pan_servo : ServoMotor
    - __tilt_servo : ServoMotor
    - {field}__movement_queue : list(SERVO_DIRECTION)
    + __init__(\n\
        pan_servo : ServoMotor,\n\
        tilt_servo : ServoMotor)
    + move_servos() -> None
    + push_movement_command(\n\
        new_cmd : SERVO_DIRECTION)
    + view_movement_queue() -> list(SERVO_DIRECTION)
}

class ServoMotor <new>
{
    + __init__()
}

' Define class relations

PiCamera ..> CameraProcessor
CameraProcessor ..> QuadCellDecoder
' QuadCellProcessor ..> QuadCellDecoder
QuadCellDecoder *-- ServoController
QuadCellDecoder .. SERVO_DIRECTION
ServoController .. SERVO_DIRECTION
ServoController *-- ServoMotor : many

}
