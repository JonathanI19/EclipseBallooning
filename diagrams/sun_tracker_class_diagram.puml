@startuml SunTracker

' Define classes

package "sun_tracker.py" #DDDDDD
{

class PiCamera <existing>
{
}

class CameraProcessor <new>
{
    - current_frame : bitmap 
    - {field}intensity_vals : tuple(double)
    + split_frame() -> None
    + compute_average_intensities() -> tuple(double)
    + __init__()
    + set_current_frame(\n\
        input_frame : bitmap) -> None
    + get_computed_values() -> tuple(double)
}

class QuadCellProcessor <new>
{
    + __init__()
    + set_current_voltages(\n\
        input_voltages : tuple(double)) -> None
    + get_computed_values() -> tuple(double)
}

class QuadCellDecoder <new>
{
    - quadrant_variance : double
    - {field}brightest_quadrants : tuple(bool)
    - servo_controller : ServoController
    + compute_quadrant_variance()
    + locate_brightest_quadrants()
    + decode_brightness_into_direction()
    + __init__()
    + set_intensity_values(\n\
        input_intensities : tuple(double)) -> None
}

enum SERVO_DIRECTION
{
    PAN_UP
    PAN_DOWN
    PAN_LEFT
    PAN_RIGHT
    TILT_UP
    TILT_DOWN
    NO_MOVE
}

class ServoController <new>
{
    - current_direction : SERVO_DIRECTION
    - {field}servo_motors : list(ServoMotor)
    + move_servos() -> None
    + __init__()
    + set_current_direction(\n\
        current_direction : SERVO_DIRECTION)
}

class ServoMotor <new>
{
    + __init__()
}

' Define class relations

PiCamera ..> CameraProcessor
CameraProcessor ..> QuadCellDecoder
QuadCellProcessor ..> QuadCellDecoder
QuadCellDecoder *-- ServoController
QuadCellDecoder .. SERVO_DIRECTION
ServoController .. SERVO_DIRECTION
ServoController *-- ServoMotor : many

}
