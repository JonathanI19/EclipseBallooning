@startuml SunTracker

' Define classes

package "sun_tracker/util" #DDDDDD
{

entity main <existing>
{
}

class CameraProcessor <new>
{
    - {field}**__frame** : npt.NDArray[np.uint8]
    - {field}**__q0** : npt.NDArray[np.uint8]
    - {field}**__q1** : npt.NDArray[np.uint8]
    - {field}**__q2** : npt.NDArray[np.uint8]
    - {field}**__q3** : npt.NDArray[np.uint8]
    - {field}**__width**: int
    - {field}**__height** : int
    - {field}**__half_width** : int
    - {field}**__half_height** : int
    - {field}**__pxl** : int
    + **__init__**(\n\
        size : tuple[int, int])
    + **set_frame**(\n\
        frame : npt.NDArray[np.uint8]) <U+27F6> None
    + **get_frame**() <U+27F6> npt.NDArray[np.uint8]
    + **convert_frame**() <U+27F6> None
    + **set_quadrants**(\n\
        q0 : npt.NDArray[np.uint8],\n\
        q1 : npt.NDArray[np.uint8],\n\
        q2 : npt.NDArray[np.uint8],\n\
        q3 : npt.NDArray[np.uint8]) <U+27F6> None
    + **split_frame**() <U+27F6> None
    + **get_quadrants**() <U+27F6> tuple[npt.NDArray[np.uint8] (x4)]
    + **compute_brightness**() <U+27F6> tuple[float]
    + **recombine**() <U+27F6> npt.NDArray[np.uint8]
}

class QuadCellDecoder <new>
{
    - {field}**__quadrant_intensities** : tuple[float (x4)]
    - {field}**__quadrant_variance** : float
    - {field}**__brightest_quadrants** : list[bool]
    - {field}**__stepper_controller** : StepperController
    - {field}**__std_dev_coefficient** : float
    - {field}**__movement_cutoff** : float
    + **__init__**(\n\
        std_dev_coefficinet : float = 1,\n\
        movement_cutoff : float = 0.1)
    + **set_intensity_values**(\n\
        input_intensities : tuple[float (x4)]) <U+27F6> None
    + **compute_quadrant_variance**() <U+27F6> None
    + **locate_brightest_quadrants**() <U+27F6> None
    + **decode_brightness_into_direction**() <U+27F6> None
    + **get_quadrant_intensities**() <U+27F6> tuple[float (x4)]
    + **get_quadrant_variance**() <U+27F6> float
    + **get_brightest_quadrants**() <U+27F6> tuple[bool (x4)]
    + **get_stepper_controller**() <U+27F6> StepperController
}

class SolarSensorDecoder <new>
{
    - {field}**__aligned_quadrant** : int
    - {field}**__dark_flag** : bool
    - {field}**__stepper_controller** : StepperController
    + **__init__**(\n\
        aligned_quadrant : int,\n\
        dark_flag : bool,\n\
        stepper_controller : StepperController)
    + **decode_brightness_into_action**(\n\
        input_adc_values : tuple[float (x4)]) <U+27F6> bool
}

enum STEPPER_DIRECTION
{
    STOP
    PAN_LEFT
    PAN_RIGHT
}

class StepperController <new>
{
    - {field}**__movement_queue** : list[STEPPER_DIRECTION]
    + **__init__**()
    + **move_steppers**() <U+27F6> None
    + **push_movement_command**(\n\
        new_cmd : STEPPER_DIRECTION)
    + **view_movement_queue**() <U+27F6> list[STEPPER_DIRECTION]
}

' Define class relations

main --> CameraProcessor: constructs
main --> StepperController: constructs
main --> QuadCellDecoder: constructs
main --> SolarSensorDecoder: constructs
QuadCellDecoder ..> StepperController: has reference
SolarSensorDecoder ..> StepperController: has reference
QuadCellDecoder . STEPPER_DIRECTION
StepperController . STEPPER_DIRECTION

}
